<header>
	<h2>Build-a-tag workshop</h2>
</header>
<article>
	<dl>
		<dt>
			<code>
				&lt;picture&gt; &lt;/picture&gt;
			</code>
		</dt>
		<dd>A <code>&lt;picture&gt;</code> block would allow for greater control over media when desiging/developing for multiple devices. There is a pretty good explanation on how implementation could work over on <a href="http://alistapart.com/article/responsive-images-how-they-almost-worked-and-what-we-need" title="responsive-images-how-they-almost-worked-and-what-we-need">A List Apart</a>. Basically by specifying multiple image files scoped to varying device screen size and/or bandwidth so a large, high-res image could be loaded large screen and a smaller image could be loaded for handheld device or limited bandwidth.</dd>

		<dt>
			<code>
				&lt;element&gt;, &lt;template&gt;, &lt;widget&gt;
			</code>
		</dt>
		<dd>With the rise of Web Components (<a href="http://youtu.be/fqULJBBEVQE" title="Web Components: A Tectonic Shift for Web Development">Web Components: A Tectonic Shift for Web Development</a>). Having a spec allows for a semantic loading of de-coupled widgets, templates, and other elements such as feeds, buttons, comments, etc. in via JS rather than just hooking to an empty <code>&lt;div&gt;</code> id or data attribute. There is currently a proposed working draft with some <a href="http://www.w3.org/TR/2013/WD-components-intro-20130606/#using-custom-elements-in-markup" title="W3C Web Components working draft">exciting new Web Components tags</a>.</dd>

		<dt>
			<code>
				 Web Components
			</code>
		</dt>
		<dd>Web Components are the future. Being somewhat of a minimalist I don't spend much time thinking about what new tags could be added to the spec but rather working with what is available.</dd>
	</dl>
</article>